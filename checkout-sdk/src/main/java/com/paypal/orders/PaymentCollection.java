// This class was generated on Tue, 04 Dec 2018 17:38:27 PST by version 0.1.0-dev+904328-dirty of Braintree SDK Generator
// PaymentCollection.java
// @version 0.1.0-dev+904328-dirty
// @type object
// @data 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
// DO NOT EDIT
package com.paypal.orders;

import java.util.Map;
import java.util.HashMap;
import java.util.List;
import java.util.ArrayList;
import com.braintreepayments.http.annotations.*;
/**
 * The collection of payments, or transactions, for a purchase unit in an order. For example, authorized payments, captured payments, and refunds.
 */
@Model
public class PaymentCollection {

    // Required default constructor
    public PaymentCollection() {}

	/**
	* An array of authorized payments for a purchase unit. A purchase unit can have zero or more authorized payments.
	*/
	@SerializedName(value = "authorizations", listClass = Authorization.class)
	private List<Authorization> authorizations;

	public List<Authorization> authorizations() { return authorizations; }
	
	public PaymentCollection authorizations(List<Authorization> authorizations) {
	    this.authorizations = authorizations;
	    return this;
	}

	/**
	* An array of captured payments for a purchase unit. A purchase unit can have zero or more captured payments.
	*/
	@SerializedName(value = "captures", listClass = Capture.class)
	private List<Capture> captures;

	public List<Capture> captures() { return captures; }
	
	public PaymentCollection captures(List<Capture> captures) {
	    this.captures = captures;
	    return this;
	}

	/**
	* An array of refunds for a purchase unit. A purchase unit can have zero or more refunds.
	*/
	@SerializedName(value = "refunds", listClass = Refund.class)
	private List<Refund> refunds;

	public List<Refund> refunds() { return refunds; }
	
	public PaymentCollection refunds(List<Refund> refunds) {
	    this.refunds = refunds;
	    return this;
	}
}
