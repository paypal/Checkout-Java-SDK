// This class was generated on Tue, 04 Dec 2018 17:38:27 PST by version 0.1.0-dev+904328-dirty of Braintree SDK Generator
// OrdersVoidRequest.java
// @version 0.1.0-dev+904328-dirty
// @type request
// @data 
// DO NOT EDIT
package com.paypal.orders;

import com.braintreepayments.http.*;
import java.util.*;
import java.util.stream.Collectors;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
/**
 * Voids an order, by ID.
 */
public class OrdersVoidRequest extends HttpRequest<Order> {

    public OrdersVoidRequest(String orderId) {
        super("/v2/checkout/orders/{order_id}/void?", "POST", Order.class);
        try {
            path(path().replace("{order_id}", URLEncoder.encode(String.valueOf(orderId), "UTF-8")));
        } catch (UnsupportedEncodingException ignored) {}
        
        header("Content-Type", "application/json");
    }
    public OrdersVoidRequest payPalClientMetadataId(String payPalClientMetadataId) {
        header("PayPal-Client-Metadata-Id", String.valueOf(payPalClientMetadataId));
        return this;
    }
    
    public OrdersVoidRequest payPalRequestId(String payPalRequestId) {
        header("PayPal-Request-Id", String.valueOf(payPalRequestId));
        return this;
    }
    
    public OrdersVoidRequest prefer(String prefer) {
        header("Prefer", String.valueOf(prefer));
        return this;
    }
    
    
}
